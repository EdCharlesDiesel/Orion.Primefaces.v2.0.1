import { SpecialOfferProduct } from "./special-offer-product.model";
import { UnitMeasure } from "./unit-measure";
import { ProductSubcategory } from "./product-subcategory.model";
import { ProductModel } from "./product-model.model";
import { BillOfMaterials } from "./bill-of-materials.model";
import { ProductDocument } from "./product-document.model";
import { ProductInventory } from "./product-inventory.model";
import { ProductListPriceHistory } from "./product-list-price-history.model";
import { ProductProductPhoto } from "./product-product-photo.model";
import { ProductReview } from "./product-review.model";
import { TransactionHistory } from "./transaction-history";
import { WorkOrder } from "./work-order.model";
import { ProductVendor } from "./product-vendor.model";
import { PurchaseOrderDetail } from "./purchase-order-detail.model";
import { ShoppingCartItem } from "./shopping-cart-item.model";
import { ProductCostHistory } from "./product-cost-history.model";

export class Product implements IProduct {
  productID: number;
  name: string;
  productNumber: string;
  makeFlag: boolean;
  finishedGoodsFlag: boolean;
  color?: string;
  safetyStockLevel: number;
  reorderPoint: number;
  standardCost: number;
  listPrice: number;
  size?: string;
  sizeUnitMeasureCode?: string;
  weightUnitMeasureCode?: string;
  weight?: number;
  daysToManufacture: number;
  productLine?: string;
  class?: string;
  style?: string;
  productSubcategoryID?: number;
  productModelID?: number;
  sellStartDate: Date;
  sellEndDate?: Date;
  discontinuedDate?: Date;
  rowguid: string;
  image: string;
  code: number;
  modifiedDate: Date;

  unitMeasure?: UnitMeasure;
  unitMeasure1?: UnitMeasure;
  productSubcategory?: ProductSubcategory;
  productModel?: ProductModel;
  billOfMaterials?: BillOfMaterials[];
  billOfMaterials1?: BillOfMaterials[];
  productCostHistories?: ProductCostHistory[];
  productDocuments?: ProductDocument[];
  productInventories?: ProductInventory[];
  productListPriceHistories?: ProductListPriceHistory[];
  productProductPhotos?: ProductProductPhoto[];
  productReviews?: ProductReview[];
  transactionHistories?: TransactionHistory[];
  workOrders?: WorkOrder[];
  productVendors?: ProductVendor[];
  purchaseOrderDetails?: PurchaseOrderDetail[];
  shoppingCartItems?: ShoppingCartItem[];
  specialOfferProducts?: SpecialOfferProduct[];

  constructor() {
    this.productID = 0;
    this.name = "";
    this.productNumber = "";
    this.makeFlag = false;
    this.finishedGoodsFlag = false;
    this.color = undefined;
    this.safetyStockLevel = 0;
    this.reorderPoint = 0;
    this.standardCost = 0;
    this.listPrice = 0;
    this.size = undefined;
    this.sizeUnitMeasureCode = undefined;
    this.weightUnitMeasureCode = undefined;
    this.weight = undefined;
    this.daysToManufacture = 0;
    this.productLine = undefined;
    this.class = undefined;
    this.style = undefined;
    this.productSubcategoryID = undefined;
    this.productModelID = undefined;
    this.sellStartDate = new Date();
    this.sellEndDate = undefined;
    this.discontinuedDate = undefined;
    this.rowguid = crypto.randomUUID();
    this.image = "";
    this.code = Math.floor(Math.random() * 100000);
    this.modifiedDate = new Date();

    this.unitMeasure = undefined;
    this.unitMeasure1 = undefined;
    this.productSubcategory = undefined;
    this.productModel = undefined;
    this.billOfMaterials = [];
    this.billOfMaterials1 = [];
    this.productCostHistories = [];
    this.productDocuments = [];
    this.productInventories = [];
    this.productListPriceHistories = [];
    this.productProductPhotos = [];
    this.productReviews = [];
    this.transactionHistories = [];
    this.workOrders = [];
    this.productVendors = [];
    this.purchaseOrderDetails = [];
    this.shoppingCartItems = [];
    this.specialOfferProducts = [];
  }
}

export interface IProduct {
  productID: number;
  name: string;
  productNumber: string;
  makeFlag: boolean;
  finishedGoodsFlag: boolean;
  color?: string;
  safetyStockLevel: number;
  reorderPoint: number;
  standardCost: number;
  listPrice: number;
  size?: string;
  sizeUnitMeasureCode?: string;
  weightUnitMeasureCode?: string;
  weight?: number;
  daysToManufacture: number;
  productLine?: string;
  class?: string;
  style?: string;
  productSubcategoryID?: number;
  productModelID?: number;
  sellStartDate: Date;
  sellEndDate?: Date;
  discontinuedDate?: Date;
  rowguid: string;
  image: string;
  code: number;
  modifiedDate: Date;
  unitMeasure?: UnitMeasure;
  unitMeasure1?: UnitMeasure;
  productSubcategory?: ProductSubcategory;
  productModel?: ProductModel;
  billOfMaterials?: BillOfMaterials[];
  billOfMaterials1?: BillOfMaterials[];
  productCostHistories?: ProductCostHistory[];
  productDocuments?: ProductDocument[];
  productInventories?: ProductInventory[];
  productListPriceHistories?: ProductListPriceHistory[];
  productProductPhotos?: ProductProductPhoto[];
  productReviews?: ProductReview[];
  transactionHistories?: TransactionHistory[];
  workOrders?: WorkOrder[];
  productVendors?: ProductVendor[];
  purchaseOrderDetails?: PurchaseOrderDetail[];
  shoppingCartItems?: ShoppingCartItem[];
  specialOfferProducts?: SpecialOfferProduct[];
}
